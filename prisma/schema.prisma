// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  groups         UserGroup[]
  firebaseTokens FirebaseToken[]
}

model FirebaseToken {
  id        Int       @id @default(autoincrement())
  token     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [id], references: [id])
}

model UserGroup {
  id        Int       @id @default(autoincrement())
  userId    Int
  groupId   String    @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
}

model Group {
  id        String      @id @default(uuid()) @db.Uuid
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  deletedAt DateTime?
  users     UserGroup[]
}
